/*
 * Copyright 2011 LMAX Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'idea'

defaultTasks 'build'

group = 'com.lmax'
version = '1.0'

ext {
    fullName = 'Element Specification'
    fullDescription = 'Element Specification - Simple element selectors for selenium or WebDriver.'
    teamName = 'LMAX Exchange'
    siteUrl = 'https://github.com/LMAX-Exchange/elementspec'
    sourceUrl = 'git@github.com:LMAX-Exchange/elementspec.git'

    if (!project.hasProperty('sonatypeUrl')) sonatypeUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    if (!project.hasProperty('sonatypeUsername')) sonatypeUsername = ''
    if (!project.hasProperty('sonatypePassword')) sonatypePassword = ''
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '2.30.0', transitive: false
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

javadoc {
    title = 'Element Specification'

    options.addStringOption('XDignore.symbol.file', '-quiet')
    options.author = true
    options.bottom = "<i>Copyright &#169; 2014 - ${Calendar.instance[Calendar.YEAR]} LMAX Ltd. All Rights Reserved.</i>"
    options.use = true
    options.version = true
    options.showFromPublic()
}

jar {
    manifest.attributes('Built-By': System.properties['user.name'],
            'Bundle-Name': fullName,
            'Bundle-Vendor': teamName,
            'Bundle-Description': fullDescription,
            'Bundle-DocURL': siteUrl)
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

def projectPom = {
    name = fullName
    description = fullDescription
    url = siteUrl

    scm {
        url = "scm:$sourceUrl"
        connection = "scm:$sourceUrl"
    }

    licenses {
        license {
            name = 'The Apache Software License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution = 'repo'
        }
    }

    developers {
        developer {
            id = 'team'
            name = teamName
        }
    }
}

install {
    repositories.mavenInstaller.pom.project(projectPom)
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        repository(url: sonatypeUrl) {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project(projectPom)
    }
}


checkstyle {
    toolVersion = "6.3"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

idea {
    project {
        vcs = 'Git'
    }
}